// Generated by CoffeeScript 1.3.3
(function() {
  var validationApp;

  validationApp = angular.module('ValidationApp', []);

  validationApp.controller('ValidationCtrl', function($scope, $http) {
    var onData, onError, onSchema, requestSchema, schema;
    $scope.schemaType = 'json-slice';
    $scope.messages = [];
    $scope.state = {
      httpError: false,
      httpErrorData: false,
      dataRequestRunning: false,
      dimensionRequestRunning: false
    };
    schema = {};
    $scope.validate = function() {
      $scope.messages = [];
      return requestSchema();
    };
    requestSchema = function() {
      var config, schemaUrl;
      $scope.state.httpError = false;
      $scope.state.running = true;
      switch ($scope.schemaType) {
        case 'json-slice':
          schemaUrl = 'json-slice-schema.json';
          break;
        case 'json-code-index':
          schemaUrl = 'json-code-index-schema.json';
      }
      $scope.messages.push("Requesting schema from " + schemaUrl);
      config = {
        method: 'GET',
        url: schemaUrl,
        cache: false,
        transformResponse: function(data) {
          return data;
        }
      };
      return $http(config).success(onSchema).error(onError);
    };
    onSchema = function(data, status, headers, config) {
      $scope.state.testRunning = false;
      $scope.state.httpError = false;
      $scope.messages.push('Received schema');
      $scope.messages.push('Starting to parse schema');
      try {
        schema = JSON.parse(data);
      } catch (error) {
        $scope.messages.push("Error: " + error);
        return;
      }
      $scope.messages.push('Finished parsing schema');
      $scope.state.testRunning = true;
      $scope.messages.push("Requesting data from web service " + $scope.wsName);
      config = {
        method: 'GET',
        url: $scope.wsName,
        cache: false,
        transformResponse: function(data) {
          return data;
        }
      };
      return $http(config).success(onData).error(onError);
    };
    onData = function(data, status, headers, config) {
      var json, valid;
      $scope.state.testRunning = false;
      $scope.state.httpError = false;
      $scope.messages.push('Received data from web service');
      $scope.messages.push('Starting to parse data');
      try {
        json = JSON.parse(data);
      } catch (error) {
        $scope.messages.push("ERROR: " + error);
        return;
      }
      $scope.messages.push('Finished parsing data');
      $scope.messages.push('Starting to validate data');
      valid = tv4.validate(json, schema);
      if (!valid) {
        $scope.messages.push(JSON.stringify(tv4.error, null, 4));
      }
      return $scope.messages.push('Finished validating data');
    };
    return onError = function(data, status, headers, config) {
      $scope.state.testRunning = false;
      $scope.state.httpError = true;
      return $scope.response = {
        status: status,
        errors: data.errors
      };
    };
  });

}).call(this);
